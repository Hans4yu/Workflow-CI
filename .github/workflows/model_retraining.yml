name: Model Retraining CI

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]
    paths:
      - 'Workflow-CI/**'
      - '.github/workflows/model_retraining.yml'
  schedule:
    - cron: '0 0 1 * *'  # Run on the 1st day of each month at midnight UTC

jobs:
  model-retraining:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up job
        uses: actions/checkout@v3

      - name: Run actions/checkout@v3
        uses: actions/checkout@v3
      
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.7'
      
      - name: Check Env
        run: |
          python --version
          pip --version
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow==2.19.0 scikit-learn==1.4.0 pandas==2.2.0 numpy==1.26.3 matplotlib==3.8.2 seaborn==0.13.1 joblib==1.3.2
      
      - name: Run mlflow project
        working-directory: ${{ github.workspace }}/Workflow-CI/MLProject
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI || 'https://dagshub.com/Hans4yu/Membangun_model.mlflow' }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
          MLFLOW_EXPERIMENT_NAME: "Loan Approval Auto Retraining"
        run: |
          mlflow run . --no-conda -P data_path=loanapproval_preprocessing.csv -P test_size=0.2 -P random_state=42 -P n_iter=20
      
      - name: Get latest MLflow run_id
        working-directory: ${{ github.workspace }}/Workflow-CI/MLProject
        run: |
          echo "MLFLOW_RUN_ID=$(ls -t mlruns/*/*/meta.yaml | head -1 | cut -d'/' -f1-3)" >> $GITHUB_ENV
      
      - name: Install Python dependencies
        run: |
          pip install requests
      
      - name: Upload to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: |
            ${{ github.workspace }}/Workflow-CI/MLProject/artifacts
            ${{ github.workspace }}/Workflow-CI/MLProject/mlruns
      
      - name: Build Docker Model
        working-directory: ${{ github.workspace }}/Workflow-CI
        run: |
          # Copy model artifacts to Docker build context
          mkdir -p docker_build
          cp -r MLProject/artifacts docker_build/
      
      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main'  # Only on main branch
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Tag Docker Image
        if: github.ref == 'refs/heads/main'  # Only on main branch
        working-directory: ${{ github.workspace }}/Workflow-CI
        run: |
          # Generate timestamp for the image tag
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "DOCKER_IMAGE_TAG=${TIMESTAMP}" >> $GITHUB_ENV
          
          # Create Dockerfile if needed
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/loan-approval-model:${TIMESTAMP} -t ${{ secrets.DOCKER_HUB_USERNAME }}/loan-approval-model:latest .
      
      - name: Push Docker Image
        if: github.ref == 'refs/heads/main'  # Only on main branch
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/loan-approval-model:${{ env.DOCKER_IMAGE_TAG }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/loan-approval-model:latest
          
          # Create Docker Hub link file
          echo "Docker Hub Repository: https://hub.docker.com/r/${{ secrets.DOCKER_HUB_USERNAME }}/loan-approval-model" > ${{ github.workspace }}/Workflow-CI/docker_hub_link.txt
      
      - name: Post Log in to Docker Hub
        if: always() && github.ref == 'refs/heads/main'
        run: docker logout
      
      - name: Post Set up Python 3.12.7
        if: always()
        run: echo "Python environment cleanup"
      
      - name: Post Run actions/checkout@v3
        if: always()
        run: echo "Checkout cleanup"
      
      - name: Complete job
        run: |
          echo "CI workflow completed successfully!"
